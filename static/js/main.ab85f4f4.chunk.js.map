{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","freshMovie","useState","setTitle","isValidTitle","setValidTitle","setDescription","isValidDescription","setValidDescription","setImgUrl","isValidImgUrl","setValidImgUrl","setImdbUrl","isValidImdbUrl","setValidImdbUrl","setImdbId","isValidImdbId","setValidImdbId","reg","onSubmit","event","preventDefault","test","handleSubmit","type","placeholder","value","classNames","is_not_valid","onChange","target","disabled","App","moviesFromServer","moviesList","setMoviesList","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab85f4f4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  freshMovie: (movie : Movie) => void;\n};\n\nexport const NewMovie : React.FC<Props> = ({ freshMovie }) => {\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setValidTitle] = useState(true);\n\n  const [description, setDescription] = useState('');\n  const [isValidDescription, setValidDescription] = useState(true);\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [isValidImgUrl, setValidImgUrl] = useState(true);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [isValidImdbUrl, setValidImdbUrl] = useState(true);\n\n  const [imdbId, setImdbId] = useState('');\n  const [isValidImdbId, setValidImdbId] = useState(true);\n  // eslint-disable-next-line max-len\n  const reg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleSubmit = (event : FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!description) {\n      setValidDescription(false);\n    } else if (!title) {\n      setValidTitle(false);\n    } else if (!imdbId) {\n      setValidImdbId(false);\n    } else if (!reg.test(imdbUrl)) {\n      setValidImdbUrl(false);\n    } else\n\n    if (!reg.test(imgUrl)) {\n      setValidImgUrl(false);\n    } else {\n      freshMovie({\n        title, description, imgUrl, imdbId, imdbUrl,\n      });\n\n      setDescription('');\n      setImdbId('');\n      setImdbUrl('');\n      setImgUrl('');\n      setTitle('');\n    }\n  };\n\n  return (\n    <form onSubmit={(event) => {\n      handleSubmit(event);\n    }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        className={classNames({ is_not_valid: !isValidTitle })}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setValidTitle(true);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Description\"\n        value={description}\n        className={classNames({ is_not_valid: !isValidDescription })}\n        onChange={(event) => {\n          setDescription(event.target.value);\n          setValidDescription(true);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"ImgUrl\"\n        value={imgUrl}\n        className={classNames({ is_not_valid: !isValidImgUrl })}\n        onChange={(event) => {\n          setImgUrl(event.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"ImdbUrl\"\n        value={imdbUrl}\n        className={classNames({ is_not_valid: !isValidImdbUrl })}\n        onChange={(event) => {\n          setImdbUrl(event.target.value);\n          setValidImdbUrl(true);\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"ImdbId\"\n        value={imdbId}\n        className={classNames({ is_not_valid: !isValidImdbId })}\n        onChange={(event) => {\n          setImdbId(event.target.value);\n          setValidImdbId(true);\n        }}\n      />\n      <button\n        type=\"submit\"\n        disabled={\n          (!description || !title || !imdbId || !imdbUrl || !imgUrl)\n        }\n      >\n        Add Movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App : React.FC = () => {\n  const [moviesList, setMoviesList] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMoviesList(prev => ([...prev, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie freshMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}